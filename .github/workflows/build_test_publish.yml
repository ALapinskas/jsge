name: Build, Test, Publish npm, Publish docs

on:
  push:
    branches:
      - github_actions  # Change this to the branch you want to trigger the workflow

jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
    - name: Checkout code

      uses: actions/checkout@main
    - name: Install node modules
      run: |
        npm i
    - name: Install submodules
      run: |
        git submodule init
        git submodule update
    - name: Run build
      run: |
        npm run prepare-push
    - name: List files
      run: ls -la ./  # List files in the current directory
    - name: Temporarily save build
      uses: actions/upload-artifact@v4
      with:
          name: jsge_build_artifact
          path: ./
          if-no-files-found: warn
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Retrieve saved Artifact
        uses: actions/download-artifact@v4
        with:
          name: jsge_build_artifact
          path: ./
          if-no-artifact-found: warn
      - name: Fix modules
        run: |
          npm rebuild
      - name: Regression test
        run: |
          npm run pu-r-test

  publish_npm: 
    runs-on: ubuntu-latest
    needs: test
    env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Retrieve saved Artifact
        uses: actions/download-artifact@v4
        with:
          name: jsge_build_artifact
          path: ./
          if-no-artifact-found: warn
      - name: Log in to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Publish npm
        run:  |
          npm publish

  publish_docs:
    runs-on: ubuntu-latest
    env:
        SSH_KEY_PATH: ${{ vars.SSH_KEY_PATH }}
        REMOTE_SERVER: ${{ vars.REMOTE_SERVER }}
    needs: test
    steps:
      - name: Retrieve saved Artifact
        uses: actions/download-artifact@v4
        with:
          name: jsge_build_artifact
          path: ./docs/build
          if-no-artifact-found: warn
      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.TW_DEPLY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/"$SSH_KEY_PATH"
          chmod 600 ~/"$SSH_KEY_PATH"
          ssh-keyscan "$REMOTE_SERVER" >> ~/.ssh/known_hosts
      - name: Upload files to server
        env:
          REMOTE_USER: ${{ vars.REMOTE_USER }}
          REMOTE_DIR: ${{ vars.REMOTE_DIR }}
        run:  |
          scp -i ~/"$SSH_KEY_PATH" -r ./docs/build/* "$REMOTE_USER"@"$REMOTE_SERVER":/"$REMOTE_DIR"